#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#h: Usage: $0 FILES...
#h:
#h: This script helps trashing out code to a single file for an hipotetical
#h: retrieval. If you wish to remove a file but have sentiments towards it
#h: pass to this script.
#h:
#h: -v : Show honored environment variables.
#h: -l : Open trashed code with less.
htrash_code() {
    ## Parse command line arguments.
    local OPTIND optopt= ops=
    while getopts "vl" optopt;do # OPTARG
        local ops="${ops}${optopt}"
        case $optopt in
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    ## Operations.
    case "${ops}" in *v*) htrash_code_show_variables;; esac
    case "${ops}" in *l*) test ! -f "${HTRASH_CODE_FILE}" || less "${HTRASH_CODE_FILE}";; esac
    ## Adding files.
    mkdir -p "`dirname "${HTRASH_CODE_FILE}"`"
    for f in "$@";do
        local b="`basename "${f}"`"
        echo "htrash-code: Trashing ${b} ..." >&2
        if true;then
            echo "================================================================"
            echo "===== --trash-- ${b}"
            echo "================================================================"
            cat "$f"
        fi >> "${HTRASH_CODE_FILE}"
        rm "${f}"
    done
    
}
htrash_code_show_variables() {
    printf '%-20s: %s\n' HTRASH_CODE_FILE "${HTRASH_CODE_FILE}"
}
htrash_code_calc_variables() {
    HTRASH_CODE_FILE="${HTRASH_CODE_FILE:-${HOME}/Documents/trash-code.txt}"
}




## ------------------------------------------------------------------------
htrash_code_calc_variables
if test @"`basename "$0"`" = @"htrash-code";then
    if test -n "$1";then
        htrash_code "$@"
    else
        sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|`basename $0`|g"
        echo ""
        sed -n 's/^ *#l: \{0,1\}//p' "$0"
   fi
fi
